{"version":3,"sources":["vendor/ember-cli/app-prefix.js","my-new-app/adapters/application.js","my-new-app/app.js","my-new-app/components/app-version.js","my-new-app/components/labeled-label.js","my-new-app/components/markdown-view.js","my-new-app/components/navigation-bar.js","my-new-app/controllers/array.js","my-new-app/controllers/login.js","my-new-app/controllers/object.js","my-new-app/controllers/procedures/edit.js","my-new-app/controllers/procedures/view.js","my-new-app/controllers/procedures.js","my-new-app/controllers/users/edit.js","my-new-app/controllers/users.js","my-new-app/helpers/markdown-ashtml.js","my-new-app/initializers/app-version.js","my-new-app/initializers/export-application-global.js","my-new-app/mixins/authenticated-route.js","my-new-app/models/procedure.js","my-new-app/models/user.js","my-new-app/router.js","my-new-app/routes/application.js","my-new-app/routes/index.js","my-new-app/routes/login.js","my-new-app/routes/procedures/edit.js","my-new-app/routes/procedures/view.js","my-new-app/routes/procedures.js","my-new-app/routes/users.js","my-new-app/serializers/application.js","my-new-app/templates/application.js","my-new-app/templates/components/labeled-label.js","my-new-app/templates/components/markdown-view.js","my-new-app/templates/components/navigation-bar.js","my-new-app/templates/index.js","my-new-app/templates/login.js","my-new-app/templates/procedures/edit.js","my-new-app/templates/procedures/view.js","my-new-app/templates/procedures.js","my-new-app/templates/users/edit.js","my-new-app/templates/users.js","my-new-app/templates/wrong-paths.js","my-new-app/tests/adapters/application.jshint.js","my-new-app/tests/app.jshint.js","my-new-app/tests/components/labeled-label.jshint.js","my-new-app/tests/components/markdown-view.jshint.js","my-new-app/tests/components/navigation-bar.jshint.js","my-new-app/tests/controllers/login.jshint.js","my-new-app/tests/controllers/procedures/edit.jshint.js","my-new-app/tests/controllers/procedures/view.jshint.js","my-new-app/tests/controllers/procedures.jshint.js","my-new-app/tests/controllers/users/edit.jshint.js","my-new-app/tests/controllers/users.jshint.js","my-new-app/tests/helpers/markdown-ashtml.jshint.js","my-new-app/tests/helpers/resolver.js","my-new-app/tests/helpers/resolver.jshint.js","my-new-app/tests/helpers/start-app.js","my-new-app/tests/helpers/start-app.jshint.js","my-new-app/tests/integration/components/labeled-label-test.js","my-new-app/tests/integration/components/labeled-label-test.jshint.js","my-new-app/tests/integration/components/markdown-view-test.js","my-new-app/tests/integration/components/markdown-view-test.jshint.js","my-new-app/tests/integration/components/navigation-bar-test.js","my-new-app/tests/integration/components/navigation-bar-test.jshint.js","my-new-app/tests/mixins/authenticated-route.jshint.js","my-new-app/tests/models/procedure.jshint.js","my-new-app/tests/models/user.jshint.js","my-new-app/tests/router.jshint.js","my-new-app/tests/routes/application.jshint.js","my-new-app/tests/routes/index.jshint.js","my-new-app/tests/routes/login.jshint.js","my-new-app/tests/routes/procedures/edit.jshint.js","my-new-app/tests/routes/procedures/view.jshint.js","my-new-app/tests/routes/procedures.jshint.js","my-new-app/tests/routes/users.jshint.js","my-new-app/tests/serializers/application.jshint.js","my-new-app/tests/test-helper.js","my-new-app/tests/test-helper.jshint.js","my-new-app/tests/unit/adapters/application-test.js","my-new-app/tests/unit/adapters/application-test.jshint.js","my-new-app/tests/unit/controllers/login-test.js","my-new-app/tests/unit/controllers/login-test.jshint.js","my-new-app/tests/unit/controllers/procedures/edit-test.js","my-new-app/tests/unit/controllers/procedures/edit-test.jshint.js","my-new-app/tests/unit/controllers/procedures/view-test.js","my-new-app/tests/unit/controllers/procedures/view-test.jshint.js","my-new-app/tests/unit/controllers/procedures-test.js","my-new-app/tests/unit/controllers/procedures-test.jshint.js","my-new-app/tests/unit/controllers/users/edit-test.js","my-new-app/tests/unit/controllers/users/edit-test.jshint.js","my-new-app/tests/unit/controllers/users-test.js","my-new-app/tests/unit/controllers/users-test.jshint.js","my-new-app/tests/unit/helpers/markdown-ashtml-test.js","my-new-app/tests/unit/helpers/markdown-ashtml-test.jshint.js","my-new-app/tests/unit/mixins/authenticated-route-test.js","my-new-app/tests/unit/mixins/authenticated-route-test.jshint.js","my-new-app/tests/unit/models/procedure-test.js","my-new-app/tests/unit/models/procedure-test.jshint.js","my-new-app/tests/unit/models/user-test.js","my-new-app/tests/unit/models/user-test.jshint.js","my-new-app/tests/unit/routes/application-test.js","my-new-app/tests/unit/routes/application-test.jshint.js","my-new-app/tests/unit/routes/index-test.js","my-new-app/tests/unit/routes/index-test.jshint.js","my-new-app/tests/unit/routes/login-test.js","my-new-app/tests/unit/routes/login-test.jshint.js","my-new-app/tests/unit/routes/procedures/edit-test.js","my-new-app/tests/unit/routes/procedures/edit-test.jshint.js","my-new-app/tests/unit/routes/procedures/view-test.js","my-new-app/tests/unit/routes/procedures/view-test.jshint.js","my-new-app/tests/unit/routes/procedures-test.js","my-new-app/tests/unit/routes/procedures-test.jshint.js","my-new-app/tests/unit/routes/users-test.js","my-new-app/tests/unit/routes/users-test.jshint.js","my-new-app/tests/unit/serializers/application-test.js","my-new-app/tests/unit/serializers/application-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('my-new-app/adapters/application', ['exports', 'ember', 'ember-data', 'my-new-app/routes/login'], function (exports, Ember, DS, loginRoute) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTAdapter.extend({\n    namespace: 'api/v1',\n    shouldReloadAll: function shouldReloadAll() {\n      // We want the store to re-fetch the backend every time findAll is called (instead of using cached versions)\n      return true;\n    },\n    shouldReloadRecord: function shouldReloadRecord() {\n      // We want the store to re-fetch the backend every time find is called (instead of using cached versions)\n      return true;\n    }\n  });\n\n});","define('my-new-app/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'my-new-app/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default'],\n    LOG_TRANSITIONS: true\n  });\n\n  //LOG_TRANSITIONS_INTERNAL: true // Log route hooks and transition\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('my-new-app/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'my-new-app/config/environment'], function (exports, AppVersionComponent, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = AppVersionComponent['default'].extend({\n    version: version,\n    name: name\n  });\n\n});","define('my-new-app/components/labeled-label', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'p',\n    classNames: ['property-input']\n  });\n\n});","define('my-new-app/components/markdown-view', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('my-new-app/components/navigation-bar', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'nav',\n    classNames: ['navbar', 'navbar-default', 'navbar-fixed-top'],\n    action: 'logout',\n    actions: {\n      logout: function logout() {\n        //Send the default action that is 'logout'\n        this.sendAction('action');\n      }\n    }\n  });\n\n});","define('my-new-app/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('my-new-app/controllers/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      logIn: function logIn() {\n        var self = this;\n\n        var credentials = this.get('model');\n        return Ember['default'].$.post(\"/j_security_check\", {\n          j_username: credentials.login,\n          j_password: credentials.password }).then(function () {\n          self.set('authenticated', true);\n\n          // Continue with previous transition if any\n          var previousTransition = self.get('previousTransition');\n          if (previousTransition) {\n            self.set('previousTransition', null);\n            previousTransition.retry();\n          } else {\n            // Default back to homepage\n            self.transitionToRoute('index');\n          }\n        }, function (response) {\n          var statusCode = response.status;\n          var errorMessage;\n          if (statusCode === 401) {\n            errorMessage = \"Invalid credentials\";\n          } else {\n            errorMessage = \"Unknown error: \" + statusCode + \" - \" + response.statusText;\n          }\n          self.set(\"errorMessage\", errorMessage);\n        });\n      }\n    }\n  });\n\n});","define('my-new-app/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('my-new-app/controllers/procedures/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n    actions: {\n      saveProcedure: function saveProcedure() {\n        var procedure = this.get('model');\n        procedure.save();\n        this.transitionToRoute('procedures.view', procedure);\n      },\n      deleteProcedure: function deleteProcedure() {\n        var model = this.get('model');\n        model.destroyRecord();\n        this.transitionToRoute('procedures');\n      },\n      cancelEdition: function cancelEdition() {\n        var procedure = this.get('model');\n        this.transitionToRoute('procedures.view', procedure);\n      }\n    }\n  });\n\n});","define('my-new-app/controllers/procedures/view', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      editProcedure: function editProcedure(procedure) {\n        this.transitionToRoute('procedures.edit', procedure);\n      },\n      deleteProcedure: function deleteProcedure(procedure) {\n        procedure.destroyRecord();\n        this.transitionToRoute('procedures');\n      }\n    }\n  });\n\n});","define('my-new-app/controllers/procedures', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    queryParams: ['nameOrDescription'],\n    nameOrDescription: \"\",\n    actions: {\n      createProcedure: function createProcedure() {\n        var newRecord = this.store.createRecord('procedure', {});\n        newRecord.save();\n        this.transitionToRoute('procedures.edit', newRecord);\n      }\n    },\n\n    // We can do this while we have all the necessary data and the set is small enough\n    filteredProcedures: Ember['default'].computed('model', 'nameOrDescription', function () {\n      var nameOrDescription = this.get('nameOrDescription');\n      var procedures = this.get('model');\n\n      if (!nameOrDescription) {\n        return procedures;\n      }\n      return procedures.filter(function (item) {\n        var foundInName = item.get(\"name\").indexOf(nameOrDescription) > -1;\n        var foundInDescription = item.get(\"description\").indexOf(nameOrDescription) > -1;\n        return foundInName || foundInDescription;\n      });\n    })\n  });\n\n});","define('my-new-app/controllers/users/edit', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      save: function save() {\n        this.get('model').save();\n      },\n      remove: function remove() {\n        var model = this.get('model');\n        model.deleteRecord();\n        model.save();\n      }\n    }\n  });\n\n});","define('my-new-app/controllers/users', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      create: function create() {\n        var newUser = this.store.createRecord('user', {});\n        newUser.save();\n      }\n    }\n  });\n\n});","define('my-new-app/helpers/markdown-ashtml', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.markdownAshtml = markdownAshtml;\n\n  function markdownAshtml(params /*, hash*/) {\n    var value = params[0];\n    if (!value) {\n      // Catch undefined values\n      value = \"\";\n    }\n    return new Ember['default'].Handlebars.SafeString(marked(value));\n  }\n\n  exports['default'] = Ember['default'].Helper.helper(markdownAshtml);\n\n});","define('my-new-app/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'my-new-app/config/environment'], function (exports, initializerFactory, config) {\n\n  'use strict';\n\n  var _config$APP = config['default'].APP;\n  var name = _config$APP.name;\n  var version = _config$APP.version;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: initializerFactory['default'](name, version)\n  };\n\n});","define('my-new-app/initializers/export-application-global', ['exports', 'ember', 'my-new-app/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (config['default'].exportApplicationGlobal !== false) {\n      var value = config['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember['default'].String.classify(config['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('my-new-app/mixins/authenticated-route', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n    beforeModel: function beforeModel(transition) {\n      var loginController = this.controllerFor('login');\n      if (!loginController.get('authenticated')) {\n        loginController.set('previousTransition', transition);\n        this.transitionTo('login');\n      }\n    }\n  });\n\n});","define('my-new-app/models/procedure', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    description: DS['default'].attr('string')\n  });\n\n});","define('my-new-app/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    login: DS['default'].attr('string'),\n    password: DS['default'].attr('string'),\n    creation: DS['default'].attr('string'),\n    modification: DS['default'].attr('string')\n  });\n\n});","define('my-new-app/router', ['exports', 'ember', 'my-new-app/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n\n    this.route('login');\n\n    this.route('users', function () {\n      this.route('edit', { path: \"edit/:user_id\" });\n    });\n\n    this.route('procedures', function () {\n      this.route('view', { path: \"view/:procedure_id\" });\n      this.route('edit', { path: \"edit/:procedure_id\" });\n    });\n\n    // Catches all the malformed urls (not matching previous routes)\n    this.route('wrong-paths', { path: '/*wrong-paths' });\n  });\n\n  exports['default'] = Router;\n\n});","define('my-new-app/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actions: {\n      /**\n       * This error handler can recover from unauthenticated requests while transitioning to a route.\n       * It tries to authenticate first, and then will retry the transition.\n       * Helpful for non authenticated routes that make authenticated requests\n       */\n      error: function error(_error, transition) {\n        if (_error.status === '401' || _error.errors && _error.errors[0].status === '401') {\n          //It's an authentication problem? Try to authenticate first\n          var loginController = this.controllerFor('login');\n          loginController.set('previousTransition', transition);\n          this.transitionTo('login');\n        } else {\n          // For other error, just log it\n          console.log(\"Route error:\");\n          console.log(_error);\n          console.log(\"Failed transition:\");\n          console.log(transition);\n          return this._super(_error, transition);\n        }\n      },\n      logout: function logout() {\n        var self = this;\n        Ember['default'].$.post(\"/j_logout\", {}).then(function (response) {\n          var loginController = self.controllerFor('login');\n          loginController.set('authenticated', null);\n          self.transitionTo('login');\n        }, function (response) {\n          console.log(\"Error logging out\");\n          console.log(response);\n        });\n      }\n    }\n  });\n\n});","define('my-new-app/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('procedures');\n    }\n  });\n\n});","define('my-new-app/routes/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return { login: '', password: '' };\n    }\n  });\n\n});","define('my-new-app/routes/procedures/edit', ['exports', 'ember', 'my-new-app/mixins/authenticated-route'], function (exports, Ember, AuthenticatedRoute) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(AuthenticatedRoute['default'], {});\n\n});","define('my-new-app/routes/procedures/view', ['exports', 'ember', 'my-new-app/mixins/authenticated-route'], function (exports, Ember, AuthenticatedRoute) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(AuthenticatedRoute['default'], {});\n\n});","define('my-new-app/routes/procedures', ['exports', 'ember', 'my-new-app/mixins/authenticated-route'], function (exports, Ember, AuthenticatedRoute) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(AuthenticatedRoute['default'], {\n    model: function model() {\n      return this.store.findAll('procedure');\n    }\n  });\n\n});","define('my-new-app/routes/users', ['exports', 'ember', 'my-new-app/mixins/authenticated-route'], function (exports, Ember, AuthenticatedRoute) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(AuthenticatedRoute['default'], {\n    model: function model() {\n      return this.store.findAll('user');\n    }\n  });\n\n});","define('my-new-app/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTSerializer.extend({\n    extractArray: function extractArray(store, type, payload) {\n      var payloadTemp = {};\n      payloadTemp[type.typeKey] = payload;\n      return this._super(store, type, payloadTemp);\n    },\n    extractSingle: function extractSingle(store, type, payload, id) {\n      var payloadTemp = {};\n      payloadTemp[type.typeKey] = [payload];\n      return this._super(store, type, payloadTemp, id);\n    },\n    serializeIntoHash: function serializeIntoHash(hash, type, snapshot, options) {\n      var serialized = this.serialize(snapshot, options);\n      serialized[\"id\"] = snapshot.id;\n      Ember.$.extend(hash, serialized);\n    }\n  });\n\n});","define('my-new-app/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/application.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[1,0],[1,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/components/labeled-label', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 3,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/components/labeled-label.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"label\",[\"loc\",[null,[1,6],[1,15]]]],\n        [\"content\",\"value\",[\"loc\",[null,[2,6],[2,15]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/components/markdown-view', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 1,\n            \"column\": 25\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/components/markdown-view.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"markdown-ashtml\",[[\"get\",\"value\",[\"loc\",[null,[1,18],[1,23]]]]],[],[\"loc\",[null,[1,0],[1,25]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/components/navigation-bar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 17,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 17,\n              \"column\": 41\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/components/navigation-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Procesos\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 22,\n              \"column\": 12\n            },\n            \"end\": {\n              \"line\": 22,\n              \"column\": 43\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/components/navigation-bar.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Administrar\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 30,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/components/navigation-bar.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\" Logo space \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"navbar-header\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" Responsive collapsible menu \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"type\",\"button\");\n        dom.setAttribute(el2,\"class\",\"navbar-toggle collapsed\");\n        dom.setAttribute(el2,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el2,\"data-target\",\"#navbar\");\n        dom.setAttribute(el2,\"aria-expanded\",\"false\");\n        dom.setAttribute(el2,\"aria-controls\",\"navbar\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"sr-only\");\n        var el4 = dom.createTextNode(\"Toggle navigation\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"icon-bar\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"icon-bar\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"icon-bar\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"navbar-brand\");\n        var el3 = dom.createTextNode(\"Procesos activos\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" Navigation options \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"navbar\");\n        dom.setAttribute(el1,\"class\",\"navbar-collapse collapse\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav navbar-nav\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"a\");\n        var el5 = dom.createTextNode(\"Inicio\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"a\");\n        var el5 = dom.createTextNode(\"Labores\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        dom.setAttribute(el3,\"class\",\"dropdown\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"#\");\n        dom.setAttribute(el4,\"class\",\"dropdown-toggle\");\n        dom.setAttribute(el4,\"data-toggle\",\"dropdown\");\n        dom.setAttribute(el4,\"role\",\"button\");\n        dom.setAttribute(el4,\"aria-expanded\",\"false\");\n        var el5 = dom.createTextNode(\"Usuarios\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"class\",\"caret\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"dropdown-menu\");\n        dom.setAttribute(el4,\"role\",\"menu\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        dom.setAttribute(el5,\"class\",\"divider\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        dom.setAttribute(el5,\"class\",\"dropdown-header\");\n        var el6 = dom.createTextNode(\"Nav header\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        var el6 = dom.createElement(\"a\");\n        dom.setAttribute(el6,\"href\",\"#\");\n        var el7 = dom.createTextNode(\"Logout\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [6, 1]);\n        var element1 = dom.childAt(element0, [7, 3]);\n        var element2 = dom.childAt(element1, [7, 0]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        morphs[2] = dom.createElementMorph(element2);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"link-to\",[\"procedures\"],[],0,null,[\"loc\",[null,[17,8],[17,53]]]],\n        [\"block\",\"link-to\",[\"users\"],[],1,null,[\"loc\",[null,[22,12],[22,55]]]],\n        [\"element\",\"action\",[\"logout\"],[],[\"loc\",[null,[25,25],[25,44]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('my-new-app/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/index.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"outlet\",[\"loc\",[null,[1,0],[1,10]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/login', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 3,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 7,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/login.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"error-message\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          return morphs;\n        },\n        statements: [\n          [\"content\",\"errorMessage\",[\"loc\",[null,[5,12],[5,28]]]]\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 13,\n            \"column\": 7\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/login.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"class\",\"form-signin\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h2\");\n        dom.setAttribute(el2,\"class\",\"form-signin-heading\");\n        var el3 = dom.createTextNode(\"Login\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-lg btn-primary btn-block\");\n        var el3 = dom.createTextNode(\"Entrar\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [9]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createMorphAt(element0,3,3);\n        morphs[1] = dom.createMorphAt(element0,5,5);\n        morphs[2] = dom.createMorphAt(element0,7,7);\n        morphs[3] = dom.createElementMorph(element1);\n        return morphs;\n      },\n      statements: [\n        [\"block\",\"if\",[[\"get\",\"errorMessage\",[\"loc\",[null,[3,12],[3,24]]]]],[],0,null,[\"loc\",[null,[3,6],[7,13]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"login name\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.login\",[\"loc\",[null,[9,14],[9,25]]]]],[],[]]],[\"loc\",[null,[8,4],[9,27]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"password\",\"type\",\"password\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.password\",[\"loc\",[null,[11,14],[11,28]]]]],[],[]],\"enter\",\"logIn\"],[\"loc\",[null,[10,4],[11,44]]]],\n        [\"element\",\"action\",[\"logIn\"],[],[\"loc\",[null,[12,53],[12,71]]]]\n      ],\n      locals: [],\n      templates: [child0]\n    };\n  }()));\n\n});","define('my-new-app/templates/procedures/edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 15,\n            \"column\": 81\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/procedures/edit.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        dom.setAttribute(el1,\"class\",\"page-header\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"class\",\"sub-header\");\n        var el2 = dom.createTextNode(\"Acciones\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-success\");\n        var el2 = dom.createTextNode(\"Guardar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-default\");\n        var el2 = dom.createTextNode(\"Cancelar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-danger\");\n        var el2 = dom.createTextNode(\"Borrar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(fragment, [6]);\n        var element2 = dom.childAt(fragment, [8]);\n        var element3 = dom.childAt(fragment, [10]);\n        var morphs = new Array(6);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        morphs[3] = dom.createElementMorph(element1);\n        morphs[4] = dom.createElementMorph(element2);\n        morphs[5] = dom.createElementMorph(element3);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"procedure name\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.name\",[\"loc\",[null,[1,88],[1,98]]]]],[],[]]],[\"loc\",[null,[1,24],[1,100]]]],\n        [\"inline\",\"textarea\",[],[\"class\",\"description_edit form-control\",\"placeholder\",\"description\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.description\",[\"loc\",[null,[5,85],[5,102]]]]],[],[]]],[\"loc\",[null,[5,4],[5,104]]]],\n        [\"inline\",\"markdown-view\",[],[\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.description\",[\"loc\",[null,[8,26],[8,43]]]]],[],[]]],[\"loc\",[null,[8,4],[8,45]]]],\n        [\"element\",\"action\",[\"saveProcedure\"],[],[\"loc\",[null,[13,32],[13,59]]]],\n        [\"element\",\"action\",[\"cancelEdition\"],[],[\"loc\",[null,[14,32],[14,59]]]],\n        [\"element\",\"action\",[\"deleteProcedure\",[\"get\",\"model\",[\"loc\",[null,[15,58],[15,63]]]]],[],[\"loc\",[null,[15,31],[15,65]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/procedures/view', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 10,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/procedures/view.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        dom.setAttribute(el1,\"class\",\"page-header\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container-fluid\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1,\"class\",\"sub-header\");\n        var el2 = dom.createTextNode(\"Acciones\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-default\");\n        var el2 = dom.createTextNode(\"Editar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-danger\");\n        var el2 = dom.createTextNode(\"Borrar\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(fragment, [2]);\n        var element2 = dom.childAt(fragment, [6]);\n        var element3 = dom.childAt(fragment, [8]);\n        var morphs = new Array(6);\n        morphs[0] = dom.createElementMorph(element0);\n        morphs[1] = dom.createMorphAt(element0,0,0);\n        morphs[2] = dom.createElementMorph(element1);\n        morphs[3] = dom.createMorphAt(element1,1,1);\n        morphs[4] = dom.createElementMorph(element2);\n        morphs[5] = dom.createElementMorph(element3);\n        return morphs;\n      },\n      statements: [\n        [\"element\",\"action\",[\"editProcedure\",[\"get\",\"model\",[\"loc\",[null,[1,49],[1,54]]]]],[\"on\",\"doubleClick\"],[\"loc\",[null,[1,24],[1,73]]]],\n        [\"content\",\"model.name\",[\"loc\",[null,[1,75],[1,89]]]],\n        [\"element\",\"action\",[\"editProcedure\",[\"get\",\"model\",[\"loc\",[null,[3,54],[3,59]]]]],[\"on\",\"doubleClick\"],[\"loc\",[null,[3,29],[3,78]]]],\n        [\"inline\",\"markdown-view\",[],[\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.description\",[\"loc\",[null,[4,24],[4,41]]]]],[],[]]],[\"loc\",[null,[4,2],[4,44]]]],\n        [\"element\",\"action\",[\"editProcedure\",[\"get\",\"model\",[\"loc\",[null,[8,57],[8,62]]]]],[],[\"loc\",[null,[8,32],[8,64]]]],\n        [\"element\",\"action\",[\"deleteProcedure\",[\"get\",\"model\",[\"loc\",[null,[9,58],[9,63]]]]],[],[\"loc\",[null,[9,31],[9,65]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/procedures', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 12,\n                \"column\": 12\n              },\n              \"end\": {\n                \"line\": 12,\n                \"column\": 70\n              }\n            },\n            \"moduleName\": \"my-new-app/templates/procedures.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"procedure.name\",[\"loc\",[null,[12,52],[12,70]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 11,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 13,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/procedures.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"procedures.view\",[\"get\",\"procedure\",[\"loc\",[null,[12,41],[12,50]]]]],[],0,null,[\"loc\",[null,[12,12],[12,82]]]]\n        ],\n        locals: [\"procedure\"],\n        templates: [child0]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 13,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 15,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/procedures.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"No procedures found\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 24,\n            \"column\": 6\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/procedures.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" Procedure list \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-3 col-md-2 sidebar\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"hr\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-success\");\n        var el4 = dom.createTextNode(\"Crear nuevo\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav nav-sidebar\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" Procedure content \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [3]);\n        var element2 = dom.childAt(element1, [5]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createMorphAt(element1,1,1);\n        morphs[2] = dom.createElementMorph(element2);\n        morphs[3] = dom.createMorphAt(dom.childAt(element1, [7]),1,1);\n        morphs[4] = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"navigation-bar\",[\"loc\",[null,[1,0],[1,18]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"Buscar...\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"nameOrDescription\",[\"loc\",[null,[7,63],[7,80]]]]],[],[]]],[\"loc\",[null,[7,4],[7,83]]]],\n        [\"element\",\"action\",[\"createProcedure\"],[],[\"loc\",[null,[9,36],[9,64]]]],\n        [\"block\",\"each\",[[\"get\",\"filteredProcedures\",[\"loc\",[null,[11,14],[11,32]]]]],[],0,1,[\"loc\",[null,[11,6],[15,15]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[21,4],[21,14]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('my-new-app/templates/users/edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 14,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/users/edit.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        dom.setAttribute(el2,\"class\",\"property-input\");\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-success\");\n        var el4 = dom.createTextNode(\"Guardar\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-danger\");\n        var el4 = dom.createTextNode(\"Borrar\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [12, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var morphs = new Array(8);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createMorphAt(fragment,2,2,contextualElement);\n        morphs[2] = dom.createMorphAt(fragment,4,4,contextualElement);\n        morphs[3] = dom.createMorphAt(fragment,6,6,contextualElement);\n        morphs[4] = dom.createMorphAt(fragment,8,8,contextualElement);\n        morphs[5] = dom.createMorphAt(fragment,10,10,contextualElement);\n        morphs[6] = dom.createElementMorph(element1);\n        morphs[7] = dom.createElementMorph(element2);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"inline\",\"labeled-label\",[],[\"label\",\"Id:\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.id\",[\"loc\",[null,[1,34],[1,42]]]]],[],[]]],[\"loc\",[null,[1,0],[1,44]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"nombre\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.name\",[\"loc\",[null,[2,56],[2,66]]]]],[],[]]],[\"loc\",[null,[2,0],[2,68]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"login name\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.login\",[\"loc\",[null,[3,60],[3,71]]]]],[],[]]],[\"loc\",[null,[3,0],[3,73]]]],\n        [\"inline\",\"input\",[],[\"class\",\"form-control\",\"placeholder\",\"password\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.password\",[\"loc\",[null,[4,58],[4,72]]]]],[],[]]],[\"loc\",[null,[4,0],[4,74]]]],\n        [\"inline\",\"labeled-label\",[],[\"label\",\"Created:\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.creation\",[\"loc\",[null,[5,39],[5,53]]]]],[],[]]],[\"loc\",[null,[5,0],[5,55]]]],\n        [\"inline\",\"labeled-label\",[],[\"label\",\"Edited:\",\"value\",[\"subexpr\",\"@mut\",[[\"get\",\"model.modification\",[\"loc\",[null,[6,38],[6,56]]]]],[],[]]],[\"loc\",[null,[6,0],[6,58]]]],\n        [\"element\",\"action\",[\"save\"],[],[\"loc\",[null,[10,34],[10,51]]]],\n        [\"element\",\"action\",[\"remove\"],[],[\"loc\",[null,[11,33],[11,52]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/templates/users', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 24,\n                \"column\": 16\n              },\n              \"end\": {\n                \"line\": 24,\n                \"column\": 57\n              }\n            },\n            \"moduleName\": \"my-new-app/templates/users.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"user.id\",[\"loc\",[null,[24,46],[24,57]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      var child1 = (function() {\n        return {\n          meta: {\n            \"revision\": \"Ember@1.13.7\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 25,\n                \"column\": 16\n              },\n              \"end\": {\n                \"line\": 25,\n                \"column\": 59\n              }\n            },\n            \"moduleName\": \"my-new-app/templates/users.hbs\"\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            dom.insertBoundary(fragment, null);\n            return morphs;\n          },\n          statements: [\n            [\"content\",\"user.name\",[\"loc\",[null,[25,46],[25,59]]]]\n          ],\n          locals: [],\n          templates: []\n        };\n      }());\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 22,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 29,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/users.hbs\"\n        },\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(4);\n          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]),0,0);\n          morphs[2] = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          morphs[3] = dom.createMorphAt(dom.childAt(element0, [7]),0,0);\n          return morphs;\n        },\n        statements: [\n          [\"block\",\"link-to\",[\"users.edit\",[\"get\",\"user\",[\"loc\",[null,[24,40],[24,44]]]]],[],0,null,[\"loc\",[null,[24,16],[24,69]]]],\n          [\"block\",\"link-to\",[\"users.edit\",[\"get\",\"user\",[\"loc\",[null,[25,40],[25,44]]]]],[],1,null,[\"loc\",[null,[25,16],[25,71]]]],\n          [\"content\",\"user.login\",[\"loc\",[null,[26,16],[26,30]]]],\n          [\"content\",\"user.password\",[\"loc\",[null,[27,16],[27,33]]]]\n        ],\n        locals: [\"user\"],\n        templates: [child0, child1]\n      };\n    }());\n    var child1 = (function() {\n      return {\n        meta: {\n          \"revision\": \"Ember@1.13.7\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 29,\n              \"column\": 8\n            },\n            \"end\": {\n              \"line\": 33,\n              \"column\": 8\n            }\n          },\n          \"moduleName\": \"my-new-app/templates/users.hbs\"\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"4\");\n          var el3 = dom.createTextNode(\"No users found\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes() { return []; },\n        statements: [\n\n        ],\n        locals: [],\n        templates: []\n      };\n    }());\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 54,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/users.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" User list \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-8\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-success\");\n        var el4 = dom.createTextNode(\"Crear Nuevo\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"table-responsive\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"table\");\n        dom.setAttribute(el4,\"class\",\"table table-striped\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"thead\");\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"tr\");\n        var el7 = dom.createTextNode(\"\\n\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"Id\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"Nombre\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"Login\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"Password\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"tbody\");\n        var el6 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"tfoot\");\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"tr\");\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        var el8 = dom.createTextNode(\"Total\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" User edit form \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [2]);\n        var element2 = dom.childAt(element1, [3]);\n        var element3 = dom.childAt(element2, [1]);\n        var element4 = dom.childAt(element2, [3, 1]);\n        var morphs = new Array(5);\n        morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);\n        morphs[1] = dom.createElementMorph(element3);\n        morphs[2] = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n        morphs[3] = dom.createMorphAt(dom.childAt(element4, [5, 1, 7]),0,0);\n        morphs[4] = dom.createMorphAt(dom.childAt(element1, [7]),1,1);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"navigation-bar\",[\"loc\",[null,[1,0],[1,18]]]],\n        [\"element\",\"action\",[\"create\"],[],[\"loc\",[null,[7,36],[7,55]]]],\n        [\"block\",\"each\",[[\"get\",\"model\",[\"loc\",[null,[22,16],[22,21]]]]],[],0,1,[\"loc\",[null,[22,8],[33,17]]]],\n        [\"content\",\"model.length\",[\"loc\",[null,[41,14],[41,30]]]],\n        [\"content\",\"outlet\",[\"loc\",[null,[50,4],[50,14]]]]\n      ],\n      locals: [],\n      templates: [child0, child1]\n    };\n  }()));\n\n});","define('my-new-app/templates/wrong-paths', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      meta: {\n        \"revision\": \"Ember@1.13.7\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 7\n          }\n        },\n        \"moduleName\": \"my-new-app/templates/wrong-paths.hbs\"\n      },\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\" User list grid \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createTextNode(\"\\n  Wrong URL! There's no route: \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        return morphs;\n      },\n      statements: [\n        [\"content\",\"model.wrong-paths\",[\"loc\",[null,[3,31],[3,52]]]]\n      ],\n      locals: [],\n      templates: []\n    };\n  }()));\n\n});","define('my-new-app/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function(assert) { \n    assert.ok(false, 'adapters/application.js should pass jshint.\\nadapters/application.js: line 1, col 8, \\'Ember\\' is defined but never used.\\nadapters/application.js: line 3, col 8, \\'loginRoute\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('my-new-app/tests/app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function(assert) { \n    assert.ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/components/labeled-label.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/labeled-label.js should pass jshint', function(assert) { \n    assert.ok(true, 'components/labeled-label.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/components/markdown-view.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/markdown-view.js should pass jshint', function(assert) { \n    assert.ok(true, 'components/markdown-view.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/components/navigation-bar.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/navigation-bar.js should pass jshint', function(assert) { \n    assert.ok(true, 'components/navigation-bar.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/login.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/login.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/login.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/procedures/edit.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/procedures');\n  QUnit.test('controllers/procedures/edit.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/procedures/edit.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/procedures/view.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/procedures');\n  QUnit.test('controllers/procedures/view.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/procedures/view.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/procedures.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/procedures.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/procedures.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/users/edit.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers/users');\n  QUnit.test('controllers/users/edit.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/users/edit.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/controllers/users.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - controllers');\n  QUnit.test('controllers/users.js should pass jshint', function(assert) { \n    assert.ok(true, 'controllers/users.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/helpers/markdown-ashtml.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/markdown-ashtml.js should pass jshint', function(assert) { \n    assert.ok(false, 'helpers/markdown-ashtml.js should pass jshint.\\nhelpers/markdown-ashtml.js: line 10, col 42, \\'marked\\' is not defined.\\nhelpers/markdown-ashtml.js: line 2, col 1, \\'moment\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('my-new-app/tests/helpers/resolver', ['exports', 'ember/resolver', 'my-new-app/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('my-new-app/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/helpers/start-app', ['exports', 'ember', 'my-new-app/app', 'my-new-app/config/environment'], function (exports, Ember, Application, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('my-new-app/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function(assert) { \n    assert.ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/integration/components/labeled-label-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('labeled-label', 'Integration | Component | labeled label', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'labeled-label', ['loc', [null, [1, 0], [1, 17]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@1.13.7',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'labeled-label', [], [], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('my-new-app/tests/integration/components/labeled-label-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/labeled-label-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'integration/components/labeled-label-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/integration/components/markdown-view-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('markdown-view', 'Integration | Component | markdown view', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 17\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'markdown-view', ['loc', [null, [1, 0], [1, 17]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@1.13.7',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'markdown-view', [], [], 0, null, ['loc', [null, [2, 4], [4, 22]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('my-new-app/tests/integration/components/markdown-view-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/markdown-view-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'integration/components/markdown-view-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/integration/components/navigation-bar-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('navigation-bar', 'Integration | Component | navigation bar', {\n    integration: true\n  });\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 18\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'navigation-bar', ['loc', [null, [1, 0], [1, 18]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@1.13.7',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@1.13.7',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'navigation-bar', [], [], 0, null, ['loc', [null, [2, 4], [4, 23]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n\n});","define('my-new-app/tests/integration/components/navigation-bar-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - integration/components');\n  QUnit.test('integration/components/navigation-bar-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'integration/components/navigation-bar-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/mixins/authenticated-route.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - mixins');\n  QUnit.test('mixins/authenticated-route.js should pass jshint', function(assert) { \n    assert.ok(true, 'mixins/authenticated-route.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/models/procedure.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/procedure.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/procedure.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/user.js should pass jshint', function(assert) { \n    assert.ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/router.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function(assert) { \n    assert.ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/application.js should pass jshint', function(assert) { \n    assert.ok(false, 'routes/application.js should pass jshint.\\nroutes/application.js: line 28, col 18, \\'response\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('my-new-app/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/index.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/login.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/login.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/procedures/edit.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/procedures');\n  QUnit.test('routes/procedures/edit.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/procedures/edit.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/procedures/view.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes/procedures');\n  QUnit.test('routes/procedures/view.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/procedures/view.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/procedures.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/procedures.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/procedures.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/routes/users.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/users.js should pass jshint', function(assert) { \n    assert.ok(true, 'routes/users.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - serializers');\n  QUnit.test('serializers/application.js should pass jshint', function(assert) { \n    assert.ok(false, 'serializers/application.js should pass jshint.\\nserializers/application.js: line 19, col 5, \\'Ember\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('my-new-app/tests/test-helper', ['my-new-app/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('my-new-app/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function(assert) { \n    assert.ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n});","define('my-new-app/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/adapters');\n  QUnit.test('unit/adapters/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/login-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/login-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/login-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:procedures/edit', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures/edit-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/procedures');\n  QUnit.test('unit/controllers/procedures/edit-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/procedures/edit-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures/view-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:procedures/view', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures/view-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/procedures');\n  QUnit.test('unit/controllers/procedures/view-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/procedures/view-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:procedures', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/procedures-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/procedures-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/procedures-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/users/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:users/edit', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/users/edit-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers/users');\n  QUnit.test('unit/controllers/users/edit-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/users/edit-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/controllers/users-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n});","define('my-new-app/tests/unit/controllers/users-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/controllers');\n  QUnit.test('unit/controllers/users-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/controllers/users-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/helpers/markdown-ashtml-test', ['my-new-app/helpers/markdown-ashtml', 'qunit'], function (markdown_ashtml, qunit) {\n\n  'use strict';\n\n  qunit.module('Unit | Helper | markdown ashtml');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function (assert) {\n    var result = markdown_ashtml.markdownAshtml(42);\n    assert.ok(result);\n  });\n\n});","define('my-new-app/tests/unit/helpers/markdown-ashtml-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/helpers');\n  QUnit.test('unit/helpers/markdown-ashtml-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/helpers/markdown-ashtml-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/mixins/authenticated-route-test', ['ember', 'my-new-app/mixins/authenticated-route', 'qunit'], function (Ember, AuthenticatedRouteMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('Unit | Mixin | authenticated route');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function (assert) {\n    var AuthenticatedRouteObject = Ember['default'].Object.extend(AuthenticatedRouteMixin['default']);\n    var subject = AuthenticatedRouteObject.create();\n    assert.ok(subject);\n  });\n\n});","define('my-new-app/tests/unit/mixins/authenticated-route-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/mixins');\n  QUnit.test('unit/mixins/authenticated-route-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/mixins/authenticated-route-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/models/procedure-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('procedure', 'Unit | Model | procedure', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('my-new-app/tests/unit/models/procedure-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/procedure-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/procedure-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('my-new-app/tests/unit/models/user-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/models');\n  QUnit.test('unit/models/user-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/models/user-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/application-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/index-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:login', 'Unit | Route | login', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/login-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/login-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/login-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/procedures/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:procedures/edit', 'Unit | Route | procedures/edit', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/procedures/edit-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/procedures');\n  QUnit.test('unit/routes/procedures/edit-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/procedures/edit-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/procedures/view-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:procedures/view', 'Unit | Route | procedures/view', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/procedures/view-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/procedures');\n  QUnit.test('unit/routes/procedures/view-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/procedures/view-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/procedures-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:procedures', 'Unit | Route | procedures', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/procedures-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/procedures-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/procedures-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/routes/users-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:users', 'Unit | Route | users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n});","define('my-new-app/tests/unit/routes/users-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes');\n  QUnit.test('unit/routes/users-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/routes/users-test.js should pass jshint.'); \n  });\n\n});","define('my-new-app/tests/unit/serializers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('application', 'Unit | Serializer | application', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:application']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n\n});","define('my-new-app/tests/unit/serializers/application-test.jshint', function () {\n\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers');\n  QUnit.test('unit/serializers/application-test.js should pass jshint', function(assert) { \n    assert.ok(true, 'unit/serializers/application-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('my-new-app/config/environment', ['ember'], function(Ember) {\n  var prefix = 'my-new-app';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"my-new-app/tests/test-helper\");\n} else {\n  require(\"my-new-app/app\")[\"default\"].create({\"name\":\"my-new-app\",\"version\":\"0.0.0+01dc4f1d\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrthpvYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprnnnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"my-new-app.js"}