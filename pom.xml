<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ar.com.tenpines</groupId>
  <artifactId>ateam-html5-poc</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>Html5 POC</name>
  <description>Prueba de concepto ember + java + html5</description>

  <properties>
    <project.java.source>1.8</project.java.source>
    <project.java.target>1.8</project.java.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <version.plugin.compiler>3.1</version.plugin.compiler>
    <version.plugin.jar>2.4</version.plugin.jar>
    <version.plugin.source>2.2.1</version.plugin.source>
    <version.plugin.eclipse>2.9</version.plugin.eclipse>
    <version.plugin.assembly>2.4</version.plugin.assembly>
    <version.plugin.failsafe>2.17</version.plugin.failsafe>
    <version.plugin.surefire>2.17</version.plugin.surefire>
    <version.plugin.assembly>2.5.3</version.plugin.assembly>
    <version.plugin.shade>2.3</version.plugin.shade>
    <version.plugin.dependency>2.10</version.plugin.dependency>
    <version.plugin.querydsl>1.1.3</version.plugin.querydsl>


    <version.slf4j>1.7.6</version.slf4j>
    <version.logback>1.1.1</version.logback>
    <version.junit>4.11</version.junit>
    <version.testng>6.8.8</version.testng>
    <version.assertj>1.6.1</version.assertj>
    <version.mockito>1.9.5</version.mockito>
    <version.javaspec>2.0</version.javaspec>

    <version.webbyconvention>0.2-SNAPSHOT</version.webbyconvention>
    <version.wrapper>3.5.25</version.wrapper>
    <version.ateamhibernate>0.1-SNAPSHOT</version.ateamhibernate>
    <version.hsqldb>2.3.2</version.hsqldb>
    <version.execontainer>0.2-SNAPSHOT</version.execontainer>
    <version.querydsl>3.6.2</version.querydsl>
    <version.bean2bean>1.1.4</version.bean2bean>
    <version.diamond>1.0.1-SNAPSHOT</version.diamond>
    <version.groovy>2.1.5</version.groovy>
    <version.h2>1.4.187</version.h2>
    <version.frontend>0.1-SNAPSHOT</version.frontend>
  </properties>


  <build>

    <!-- Include all types of resources into the final build -->
    <resources>
      <resource>
        <directory>src/main/html</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>

      <!-- Genera los binarios -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${version.plugin.compiler}</version>
        <configuration>
          <source>${project.java.source}</source>
          <target>${project.java.target}</target>
          <debug>true</debug>
          <!-- This parameter enables parameter name preservation -->
          <compilerArgument>-parameters</compilerArgument>
        </configuration>
      </plugin>


      <!-- Generates Queryable types for querydsl -->
      <plugin>
        <groupId>com.mysema.maven</groupId>
        <artifactId>apt-maven-plugin</artifactId>
        <version>${version.plugin.querydsl}</version>
        <executions>
          <execution>
            <goals>
              <goal>process</goal>
            </goals>
            <configuration>
              <outputDirectory>target/generated-sources/java</outputDirectory>
              <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Descomprime el contenedor ejecutable, el frontend -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${version.plugin.dependency}</version>
        <executions>
          <execution>
            <id>unpack-frontend</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>ar.com.kfgodel</groupId>
                  <artifactId>ember-cli-poc</artifactId>
                  <version>${version.frontend}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>src/main/html/web</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-container</id>
            <phase>compile</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>ar.com.kfgodel</groupId>
                  <artifactId>executable-container</artifactId>
                  <version>${version.execontainer}</version>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>target/unpacked</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Attachea los fuentes como jar -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${version.plugin.source}</version>
        <executions>
          <execution>
            <id>attach-source</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- 1º Los empaqueta en jars -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${version.plugin.jar}</version>
        <configuration>
          <!-- Needed to match container expected jar file -->
          <finalName>executable-app</finalName>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>ar.com.tenpines.html5poc.Html5PocMain</mainClass>
            </manifest>
            <manifestEntries>
              <Build-JVM>${java.vm.name} - ${java.vm.vendor}</Build-JVM>
              <Build-OS>${os.name} - Version: ${os.version}</Build-OS>
              <Application-GroupId>${project.groupId}</Application-GroupId>
              <Application-Artifact>${project.artifactId}</Application-Artifact>
              <Application-Version>${project.version}</Application-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>


      <!-- 2º Genera un sólo jar con todas las dependencias -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ComponentsXmlResourceTransformer"/>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.handlers</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.schemas</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.tooling</resource>
            </transformer>
          </transformers>
        </configuration>
      </plugin>

      <!-- 3º Empaqueta el resultado final en un zip -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${version.plugin.assembly}</version>
        <executions>
          <execution>
            <id>generate-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/descriptor.xml</descriptor>
          </descriptors>
          <finalName>${project.artifactId}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <outputDirectory>target</outputDirectory>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <id>kfgodel_mosquito</id>
      <name>Repo Mosquito</name>
      <url>http://kfgodel.info:8081/nexus/content/groups/public/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <id>kfgodel_mosquito</id>
      <name>Repo Mosquito</name>
      <url>http://kfgodel.info:8081/nexus/content/groups/public/</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>

    <!-- Communication classes to manage executable host container -->
    <dependency>
      <groupId>org.tanukisoftware</groupId>
      <artifactId>wrapper</artifactId>
      <version>${version.wrapper}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Simplified web container -->
    <dependency>
      <groupId>ar.com.kfgodel</groupId>
      <artifactId>web-by-convention</artifactId>
      <version>${version.webbyconvention}</version>
    </dependency>

    <!-- Programmatic hibernate -->
    <dependency>
      <groupId>ar.com.tenpines</groupId>
      <artifactId>ateam-hibernate</artifactId>
      <version>${version.ateamhibernate}</version>
    </dependency>

    <!-- In file database -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${version.hsqldb}</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${version.h2}</version>
    </dependency>


    <!-- programmatic dsl for queries -->
    <dependency>
      <groupId>com.mysema.querydsl</groupId>
      <artifactId>querydsl-apt</artifactId>
      <version>${version.querydsl}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <!-- Already provided by jetty under another groupid -->
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.mysema.querydsl</groupId>
      <artifactId>querydsl-jpa</artifactId>
      <version>${version.querydsl}</version>
      <exclusions>
        <exclusion>
          <!-- Already provided by a reflections findbugs dependency -->
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Multi-type conversions -->
    <dependency>
      <groupId>net.sf.kfgodel</groupId>
      <artifactId>bean2bean</artifactId>
      <version>${version.bean2bean}</version>
    </dependency>
    <!-- Lenguaje de scripting para expresiones de conversiones -->
    <dependency>
      <!-- Groovy language -->
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${version.groovy}</version>
      <exclusions>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-tree</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-commons</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ow2.asm</groupId>
          <artifactId>asm-analysis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Better reflection -->
    <dependency>
      <groupId>ar.com.kfgodel</groupId>
      <artifactId>diamond</artifactId>
      <version>${version.diamond}</version>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${version.slf4j}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${version.slf4j}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${version.logback}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${version.logback}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>

    <!-- Nice assertions -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.assertj}</version>
      <scope>test</scope>
    </dependency>

    <!-- Spec for testing -->
    <dependency>
      <groupId>ar.com.dgarcia</groupId>
      <artifactId>java-spec</artifactId>
      <version>${version.javaspec}</version>
      <scope>test</scope>
    </dependency>

    <!-- Mock for testing -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <distributionManagement>
    <repository>
      <id>kfgodel_mosquito</id>
      <name>Internal Releases</name>
      <url>http://kfgodel.info:8081/nexus/content/repositories/releases/</url>
    </repository>
    <snapshotRepository>
      <id>kfgodel_mosquito</id>
      <name>Internal Snapshots</name>
      <url>http://kfgodel.info:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

</project>
